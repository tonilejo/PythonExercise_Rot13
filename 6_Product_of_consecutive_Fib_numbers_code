# The Fibonacci numbers are the numbers in the following integer sequence (Fn):
# 
# 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, ...
# 
# such as
# 
# F(n) = F(n-1) + F(n-2) with F(0) = 0 and F(1) = 1.
# 
# Given a number, say prod (for product), we search two Fibonacci numbers F(n) and F(n+1) verifying
# 
# F(n) * F(n+1) = prod.
# 
# Your function productFib takes an integer (prod) and returns an array:
# 
# [F(n), F(n+1), true] or {F(n), F(n+1), 1} or (F(n), F(n+1), True)
# depending on the language if F(n) * F(n+1) = prod.
# 
# If you don't find two consecutive F(n) verifying F(n) * F(n+1) = prodyou will return
# 
# [F(n), F(n+1), false] or {F(n), F(n+1), 0} or (F(n), F(n+1), False)
# F(n) being the smallest one such as F(n) * F(n+1) > prod.
# -------------------------------------------------------------------------------------------------

def productFib(prod):
    first = 0
    second = f_x_s = 1
    list_final = []
    while True:
        list_final.append(first)
        list_final.append(second)
        f_x_s = first * second
        if f_x_s == prod:
            list_final.append(1)
            break
        elif f_x_s > prod:
            list_final.append(0)
            break
        temp = first + second
        first = second
        second = temp
        list_final = []
    return list_final
